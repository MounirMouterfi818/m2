version: 2.1

jobs:
  test-java:  # Job pour exécuter les tests et générer la couverture de code
    docker:
      - image: cimg/openjdk:22.0
    steps:
      - checkout
      - run:
          name: Set JAVA_HOME
          command: |
            echo "Setting JAVA_HOME"
            export JAVA_HOME=/usr/local/openjdk-22
            echo "JAVA_HOME=$JAVA_HOME"
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          name: Run Maven Tests with Coverage
          command: mvn verify
      - store_test_results:
          path: target/surefire-reports
      - store_artifacts:
          path: target/site/jacoco
      - save_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
          paths:
            - ~/.m2/repository
      - run:
          name: Upload to Codecov
          command: |
            curl -s https://codecov.io/bash > /tmp/codecov
            bash /tmp/codecov

  checkstyle:  # Job pour exécuter CheckStyle
    docker:
      - image: cimg/openjdk:22.0
    steps:
      - checkout
      - run:
          name: Run CheckStyle
          command: mvn checkstyle:checkstyle
      - store_artifacts:
          path: target/site/checkstyle.html
      - store_artifacts:
          path: target/checkstyle-result.xml
      - run:
          name: Push CheckStyle result to GitHub
          command: |
            mkdir -p checkstyle-reports
            mv target/checkstyle-result.xml checkstyle-reports/checkstyle-result.xml || true
            git config --global user.email "ci@circleci.com"
            git config --global user.name "CircleCI"
            git add -f checkstyle-reports/checkstyle-result.xml
            git commit -m "Add CheckStyle result [skip ci]" || echo "No changes to commit"
            git push https://MounirMouterfi818:$Token@github.com/MounirMouterfi818/m2.git $(git rev-parse --abbrev-ref HEAD)

  generate-javadoc:  # Job pour générer la Javadoc
    docker:
      - image: cimg/openjdk:22.0
    steps:
      - checkout
      - run:
          name: Set JAVA_HOME
          command: |
            echo "Setting JAVA_HOME"
            export JAVA_HOME=/usr/local/openjdk-22
            echo "JAVA_HOME=$JAVA_HOME"
      - run:
          name: Generate Javadoc
          command: mvn clean javadoc:aggregate
      - run:
          name: Deploy Javadoc to GitHub Pages
          command: |
            mkdir -p /tmp/javadoc
            cp -r target/site/apidocs/* /tmp/javadoc/
            git config --global user.name "CircleCI"
            git config --global user.email "ci@circleci.com"
            git clone --depth=1 https://MounirMouterfi818:$Token@github.com/MounirMouterfi818/m2.git /tmp/repo
            cd /tmp/repo
            if git show-ref --verify --quiet refs/heads/gh-pages; then
              git checkout gh-pages
            else
              git checkout --orphan gh-pages
            fi
            git pull origin gh-pages || true
            rm -rf *
            cp -r /tmp/javadoc/* .
            git add .
            git commit -m "Deploy Javadoc to GitHub Pages" || echo "No changes to commit"
            git push https://MounirMouterfi818:$Token@github.com/MounirMouterfi818/m2.git gh-pages

workflows:
  build-and-upload:
    jobs:
      - test-java:
          filters:
            branches:
              only:
                - main
      - checkstyle:
          filters:
            branches:
              only:
                - main
      - generate-javadoc:
          filters:
            branches:
              only:
                - main
